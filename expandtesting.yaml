_type: export
__export_format: 4
__export_date: 2024-09-10T12:22:02.335Z
__export_source: insomnia.desktop.app:v9.3.3
resources:
  - _id: req_469ff1d742044044b47f195a4bb98a75
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725867055499
    created: 1725866961456
    url: "{{_['base_url']}}/health-check"
    name: 1 - Check the health of the API Notes services
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: ""
        value: ""
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960105
    isPrivate: false
    afterResponseScript: "let responseCAPIH = insomnia.response.json();\r

      \r

      insomnia.test(\"1 - Check api health success\", function () {\r

      \    insomnia.expect(responseCAPIH.success).to.be.equal(true);\r

      });\r

      insomnia.test(\"1 - Check api health status\", function () {\r

      \    insomnia.expect(responseCAPIH.status).to.be.equal(200);\r

      });\r

      insomnia.test(\"1 - Check api health message\", function () {\r

      \    insomnia.expect(responseCAPIH.message).to.be.equal(\"Notes API
      is Running\");\r

      });\r

      \r\n"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_dd83a69417254ff0af232899ad53e460
    parentId: wrk_89cad6614e814a15aca3dd4bf8d26018
    modified: 1725866961454
    created: 1725866961454
    name: expandtesting
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1725866960106
    preRequestScript: ""
    afterResponseScript: ""
    authentication: {}
    _type: request_group
  - _id: wrk_89cad6614e814a15aca3dd4bf8d26018
    parentId: null
    modified: 1725866941338
    created: 1725866941338
    name: expandtesting
    description: ""
    scope: collection
    _type: workspace
  - _id: req_4011c7ded6f644ec8bba6d60a91c8d3b
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725904543604
    created: 1725866961458
    url: "{{base_url}}/users/register"
    name: 2.1 - Creates a new user account
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
            "name":"{{ _.user_name }}",
            "email":"{{ _.user_email }}",
            "password":"{{ _.user_password }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    preRequestScript: >+
      let user_email_upper_case =
      insomnia.variables.replaceIn("{{$randomEmail}}");

      let user_email_lower_case = user_email_upper_case.toLowerCase();

      insomnia.environment.set("user_email", user_email_lower_case);


      let user_name_preview = insomnia.variables.replaceIn("{{$randomFullName}}");

      insomnia.environment.set("user_name", user_name_preview);


      let user_password_preview = insomnia.variables.replaceIn("{{$randomPassword}}");

      insomnia.environment.set("user_password", user_password_preview);






    metaSortKey: -1725866960104
    isPrivate: false
    afterResponseScript: >+
      let responseCU = insomnia.response.json();

      let requestCU = JSON.parse(insomnia.request.body.raw);

      console.log(requestCU)


      insomnia.environment.set("user_id", responseCU.data.id);

      // insomnia.environment.set("user_name", responseCU.data.name);

      // insomnia.environment.set("user_email", responseCU.data.email);

      // insomnia.environment.set("user_password", requestCU.password);


      insomnia.test("2.1 - Check creates a new user account success", function () {
          insomnia.expect(responseCU.success).to.be.equal(true);
      });

      insomnia.test("2.1 - Check creates a new user account status", function () {
          insomnia.expect(responseCU.status).to.be.equal(201);
      });

      insomnia.test("2.1 - Check creates a new user account message", function () {
          insomnia.expect(responseCU.message).to.be.equal("User account created successfully");
      });

      insomnia.test("2.1 - Assert created name", function () {
          insomnia.expect(responseCU.data.name).to.be.equal(insomnia.environment.get("user_name"));
      });

      insomnia.test("2.1 - Assert created e-mail", function () {
          insomnia.expect(responseCU.data.email).to.be.equal(insomnia.environment.get("user_email"));
      });

    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_b22054aaef6c420c905242d1f486e5d8
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725907512140
    created: 1725866961460
    url: "{{base_url}}/users/register"
    name: 2.2 - Creates a new user account  - bad request
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	  "name":"{{ _.user_name }}",
            "email":"@{{ _.user_email }}",
            "password":"{{ _.user_password }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    preRequestScript: "\n\n\n\n\n\n\n\n"
    metaSortKey: -1725866960103
    isPrivate: false
    afterResponseScript: "let responseCUBR = insomnia.response.json();\r

      \r

      insomnia.test(\"2.2 - Check creates a new user account - bad request
      success\", function () {\r

      \    insomnia.expect(responseCUBR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"2.2 - Check creates a new user account - bad request
      status\", function () {\r

      \    insomnia.expect(responseCUBR.status).to.be.equal(400);\r

      });\r

      insomnia.test(\"2.2 - Check creates a new user account - bad request
      message\", function () {\r

      \    insomnia.expect(responseCUBR.message).to.be.equal(\"A valid
      email address is required\");\r

      });\r

      \r\n"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_ab22f4baa3864c81b0f895d882916ae3
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725905313051
    created: 1725866961461
    url: "{{base_url}}/users/login"
    name: 3.1 - Log in as an existing user
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
            "email":"{{ _.user_email }}",
            "password":"{{ _.user_password }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960102
    isPrivate: false
    afterResponseScript: >-
      let responseLU = insomnia.response.json();


      insomnia.environment.set("user_token", responseLU.data.token);


      insomnia.test("3.1 - Check log in as an existing user success", function () {
          insomnia.expect(responseLU.success).to.be.equal(true);
      });

      insomnia.test("3.1 - Check log in as an existing user status", function () {
          insomnia.expect(responseLU.status).to.be.equal(200);
      });

      insomnia.test("3.1 - Check log in as an existing user message", function () {
          insomnia.expect(responseLU.message).to.be.equal("Login successful");
      });

      insomnia.test("3.1 - Assert user id", function () {
          insomnia.expect(insomnia.environment.get("user_id")).to.be.equal(responseLU.data.id);
      });

      insomnia.test("3.1 - Assert user name", function () {
          insomnia.expect(insomnia.environment.get("user_name")).to.be.equal(responseLU.data.name);
      });

      insomnia.test("3.1 - Assert user e-mail", function () {
          insomnia.expect(insomnia.environment.get("user_email")).to.be.equal(responseLU.data.email);
      });
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_9c9f29811f2e440ca4b72ce1708c0c27
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725907329258
    created: 1725866961463
    url: "{{base_url}}/users/login"
    name: 3.2 - Log in as an existing user - bad request
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
            "email":"@{{ _.user_email }}",
            "password":"{{ _.user_password }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960101
    isPrivate: false
    afterResponseScript: "let responseLUBR = insomnia.response.json();\r

      \r

      insomnia.test(\"3.2 - Check log in as an existing user - bad request
      success\", function () {\r

      \    insomnia.expect(responseLUBR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"3.2 - Check log in as an existing user - bad request
      status\", function () {\r

      \    insomnia.expect(responseLUBR.status).to.be.equal(400);\r

      });\r

      insomnia.test(\"3.2 - Check log in as an existing user - bad request
      message\", function () {\r

      \    insomnia.expect(responseLUBR.message).to.be.equal(\"A valid
      email address is required\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_051fa964f21d4bf9b9c125e47464ed50
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725907693794
    created: 1725866961464
    url: "{{base_url}}/users/login"
    name: 3.3 - Log in as an existing user - unauthorized request
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
            "email":"{{ _.user_email }}",
            "password":"@{{ _.user_password }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960100
    isPrivate: false
    afterResponseScript: "let responseLUUR = insomnia.response.json();\r

      \r

      insomnia.test(\"3.3 - Check log in as an existing user -
      unauthorized request success\", function () {\r

      \    insomnia.expect(responseLUUR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"3.3 - Check log in as an existing user -
      unauthorized request status\", function () {\r

      \    insomnia.expect(responseLUUR.status).to.be.equal(401);\r

      });\r

      insomnia.test(\"3.3 - Check log in as an existing user -
      unauthorized request message\", function () {\r

      \    insomnia.expect(responseLUUR.message).to.be.equal(\"Incorrect
      email address or password\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_ebf9f1595fae4e0fb572fd2814e9def2
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961466
    created: 1725866961466
    url: "{{base_url}}/users/profile"
    name: 4.1 - Retrieve user profile information
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960099
    isPrivate: false
    afterResponseScript: "let responseRU = insomnia.response.json();\r

      \r

      insomnia.test(\"4.1 - Check retrieve user profile information
      success\", function () {\r

      \    insomnia.expect(responseRU.success).to.be.equal(true);\r

      });\r

      insomnia.test(\"4.1 - Check retrieve user profile information
      status\", function () {\r

      \    insomnia.expect(responseRU.status).to.be.equal(200);\r

      });\r

      insomnia.test(\"4.1 - Check retrieve user profile information
      message\", function () {\r

      \    insomnia.expect(responseRU.message).to.be.equal(\"Profile
      successful\");\r

      });\r

      insomnia.test(\"4.1 - Assert user id\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"user_id\")).to.be.e\
      qual(responseRU.data.id);\r

      });\r

      insomnia.test(\"4.1 - Assert user name\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"user_name\")).to.be\
      .equal(responseRU.data.name);\r

      });\r

      insomnia.test(\"4 - Assert user e-mail\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"user_email\")).to.b\
      e.equal(responseRU.data.email);\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_09ad2127f1b3464d9f3f42fbd07e7bfb
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961468
    created: 1725866961468
    url: "{{base_url}}/users/profile"
    name: 4.2 - Retrieve user profile information - bad request
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "{{user_token}}"
      - name: x-content-format
        value: badRequest
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960098
    isPrivate: false
    afterResponseScript: "let responseRUBR = insomnia.response.json();\r

      \r

      insomnia.test(\"4.2 - Check retrieve user profile information - bad
      request success\", function () {\r

      \    insomnia.expect(responseRUBR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"4.2 - Check retrieve user profile information - bad
      request status\", function () {\r

      \    insomnia.expect(responseRUBR.status).to.be.equal(400);\r

      });\r

      insomnia.test(\"4.2 - Check retrieve user profile information - bad
      request message\", function () {\r

      \    insomnia.expect(responseRUBR.message).to.be.equal(\"Invalid
      X-Content-Format header, Only application/json is supported.\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_9f414b3afd864bceba6a8caa8cd7dc37
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961469
    created: 1725866961469
    url: "{{base_url}}/users/profile"
    name: 4.3 - Retrieve user profile information - unauthorized request
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "@{{user_token}}"
      - name: x-content-format
        value: badRequest
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960097
    isPrivate: false
    afterResponseScript: "let responseRUUR = insomnia.response.json();\r

      \r

      insomnia.test(\"4.3 - Check retrieve user profile information -
      unauthorized request success\", function () {\r

      \    insomnia.expect(responseRUUR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"4.3 - Check retrieve user profile information -
      unauthorized request status\", function () {\r

      \    insomnia.expect(responseRUUR.status).to.be.equal(401);\r

      });\r

      insomnia.test(\"4.3 - Check retrieve user profile information -
      unauthorized request message\", function () {\r

      \    insomnia.expect(responseRUUR.message).to.be.equal(\"Access
      token is not valid or has expired, you will need to login\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_d7c6f95ee5d943a9abb0b690f298cd43
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725908274437
    created: 1725866961471
    url: "{{base_url}}/users/profile"
    name: 5.1 - Update the user profile information
    description: ""
    method: PATCH
    body:
      mimeType: application/json
      text: |-
        {
            "name":"{{ _.user_name }}",
            "phone":"{{ _.user_phone }}",
            "company":"{{ _.user_company }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: >
      insomnia.environment.set("user_phone", _.random(10000000,999999999999));


      let user_company_preview = insomnia.variables.replaceIn("{{$randomCompanyName}}");

      insomnia.environment.set("user_company", user_company_preview);
    metaSortKey: -1725866960096
    isPrivate: false
    afterResponseScript: >+
      let responseUU = insomnia.response.json();

      let requestUU = JSON.parse(insomnia.request.body.raw);


      // insomnia.environment.set("user_name", requestUU.name);

      // insomnia.environment.set("user_phone", requestUU.phone);

      // insomnia.environment.set("user_company", requestUU.company);


      insomnia.test("5.1 - Check update the user profile information success", function () {
          insomnia.expect(responseUU.success).to.be.equal(true);
      });

      insomnia.test("5.1 - Check update the user profile information status", function () {
          insomnia.expect(responseUU.status).to.be.equal(200);
      });

      insomnia.test("5.1 - Check update the user profile information message", function () {
          insomnia.expect(responseUU.message).to.be.equal("Profile updated successful");
      });

      insomnia.test("5.1 - Assert user id", function () {
          insomnia.expect(insomnia.environment.get("user_id")).to.be.equal(responseUU.data.id);
      });

      insomnia.test("5.1 - Assert user name", function () {
          insomnia.expect(insomnia.environment.get("user_name")).to.be.equal(responseUU.data.name);
      });

      insomnia.test("5.1 - Assert user e-mail", function () {
          insomnia.expect(insomnia.environment.get("user_email")).to.be.equal(responseUU.data.email);
      });

      insomnia.test("5.1 - Assert user phone", function () {

      // 	we use == here because response field and variable have different types
          insomnia.expect(insomnia.environment.get("user_phone")) == (responseUU.data.phone);
      });

      insomnia.test("5.1 - Assert user company", function () {
          insomnia.expect(insomnia.environment.get("user_company")).to.be.equal(responseUU.data.company);
      });


    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_a49c2da489d24a54ba040dab65ebcdc5
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725908337156
    created: 1725866961472
    url: "{{base_url}}/users/profile"
    name: 5.2 - Update the user profile information - bad request
    description: ""
    method: PATCH
    body:
      mimeType: application/json
      text: |-
        {
            "name":"6@#",
            "phone":"{{ _.user_phone }}",
            "company":"{{ _.user_company }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960095
    isPrivate: false
    afterResponseScript: "let responseUUBR = insomnia.response.json();\r

      \r

      insomnia.test(\"5.2 - Check update the user profile information -
      bad request success\", function () {\r

      \    insomnia.expect(responseUUBR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"5.2 - Check update the user profile information -
      bad request status\", function () {\r

      \    insomnia.expect(responseUUBR.status).to.be.equal(400);\r

      });\r

      insomnia.test(\"5.2 - Check update the user profile information -
      bad request message\", function () {\r

      \    insomnia.expect(responseUUBR.message).to.be.equal(\"User name
      must be between 4 and 30 characters\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3e4742c7ffda44e693167c46fc47bb7a
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725908400182
    created: 1725866961473
    url: "{{base_url}}/users/profile"
    name: 5.3 - Update the user profile information - unauthorized request
    description: ""
    method: PATCH
    body:
      mimeType: application/json
      text: |-
        {
            "name":"{{ _.user_name }}",
            "phone":"{{ _.user_phone }}",
            "company":"{{ _.user_company }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "@{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960094
    isPrivate: false
    afterResponseScript: "let responseUUUR = insomnia.response.json();\r

      \r

      insomnia.test(\"5.3 - Check update the user profile information -
      unauthorized request success\", function () {\r

      \    insomnia.expect(responseUUUR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"5.3 - Check update the user profile information -
      unauthorized request status\", function () {\r

      \    insomnia.expect(responseUUUR.status).to.be.equal(401);\r

      });\r

      insomnia.test(\"5.3 - Check update the user profile information -
      unauthorized request message\", function () {\r

      \    insomnia.expect(responseUUUR.message).to.be.equal(\"Access
      token is not valid or has expired, you will need to login\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_26c5f86383024f1abd1f6628c3923124
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725948255703
    created: 1725866961475
    url: "{{_['base_url']}}/users/change-password"
    name: 6.1 - Change a user's password
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
            "currentPassword":"{{ _.user_password }}",
            "newPassword":"{{ _.user_password_new }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: >-
      let user_password_new_preview =
      insomnia.variables.replaceIn("{{$randomPassword}}");

      insomnia.environment.set("user_password_new", user_password_new_preview);
    metaSortKey: -1725866960093
    isPrivate: false
    afterResponseScript: >-
      let responseCUP = insomnia.response.json();

      let requestCUP = JSON.parse(insomnia.request.body.raw);


      insomnia.environment.set("user_password", insomnia.environment.get("user_password_new"));


      insomnia.test("6.1 - Check api health success", function () {
          insomnia.expect(responseCUP.success).to.be.equal(true);
      });

      insomnia.test("6.1 - Check api health status", function () {
          insomnia.expect(responseCUP.status).to.be.equal(200);
      });

      insomnia.test("6.1 - Check api health message", function () {
          insomnia.expect(responseCUP.message).to.be.equal("The password was successfully updated");
      });
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_72f44cf32b9c46be833a4d2d31e4b5c3
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725908762060
    created: 1725866961476
    url: "{{_['base_url']}}/users/change-password"
    name: 6.2 - Change a user's password - bad request
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
            "currentPassword":"{{ _.user_password }}",
            "newPassword":"123"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960092
    isPrivate: false
    afterResponseScript: "let responseCUPBR = insomnia.response.json();\r

      \r

      insomnia.test(\"6.2 - Check api health - bad request success\",
      function () {\r

      \    insomnia.expect(responseCUPBR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"6.2 - Check api health - bad request status\",
      function () {\r

      \    insomnia.expect(responseCUPBR.status).to.be.equal(400);\r

      });\r

      insomnia.test(\"6.2 - Check api health - bad request message\",
      function () {\r

      \    insomnia.expect(responseCUPBR.message).to.be.equal(\"New
      password must be between 6 and 30 characters\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_504ab1cf1648438c92149dbfd3c8fc6e
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725908819427
    created: 1725866961478
    url: "{{_['base_url']}}/users/change-password"
    name: 6.3 - Change a user's password - unauthorized request
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
            "currentPassword":"{{ _.user_password }}",
            "newPassword":"{{ _.user_password_new }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "@{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960091
    isPrivate: false
    afterResponseScript: "let responseCUPUR = insomnia.response.json();\r

      \r

      insomnia.test(\"6.3 - Check api health - unauthorized request
      success\", function () {\r

      \    insomnia.expect(responseCUPUR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"6.3 - Check api health - unauthorized request
      status\", function () {\r

      \    insomnia.expect(responseCUPUR.status).to.be.equal(401);\r

      });\r

      insomnia.test(\"6.3 - Check api health - unauthorized request
      message\", function () {\r

      \    insomnia.expect(responseCUPUR.message).to.be.equal(\"Access
      token is not valid or has expired, you will need to login\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_012edf013b8848cc906fe21e21c196a5
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725909299605
    created: 1725866961479
    url: "{{base_url}}/notes"
    name: 7.1 - Creates a new note
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
            "title":"{{ _.note_title }}",
            "description":"{{ _.note_description }}",
            "category":"{{ _.note_category }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: >
      insomnia.environment.set("note_category", _.sample(['Home', 'Work',
      'Personal']));

      let note_description_preview = insomnia.variables.replaceIn("{{$randomWord}} {{$randomWord}}");

      insomnia.environment.set("note_description", note_description_preview);

      let note_title_preview = insomnia.variables.replaceIn("{{$randomWord}} {{$randomWord}} {{$randomWord}}");

      insomnia.environment.set("note_title", note_title_preview);
    metaSortKey: -1725866960090
    isPrivate: false
    afterResponseScript: >+
      let responseCN = insomnia.response.json();

      let requestCN = JSON.parse(insomnia.request.body.raw);


      // insomnia.environment.set("note_title", requestCN.title);

      // insomnia.environment.set("note_description", requestCN.description);

      // insomnia.environment.set("note_category", requestCN.category);

      insomnia.environment.set("note_id", responseCN.data.id);

      insomnia.environment.set("note_completed", responseCN.data.completed);

      insomnia.environment.set("note_created_at", responseCN.data.created_at);

      insomnia.environment.set("note_updated_at", responseCN.data.updated_at);


      insomnia.test("7.1 - Check creates a new note success", function () {
          insomnia.expect(responseCN.success).to.be.equal(true);
      });

      insomnia.test("7.1 - Check creates a new note status", function () {
          insomnia.expect(responseCN.status).to.be.equal(200);
      });

      insomnia.test("7.1 - Check creates a new note message", function () {
          insomnia.expect(responseCN.message).to.be.equal("Note successfully created");
      });

      insomnia.test("7.1 - Assert note title", function () {
          insomnia.expect(insomnia.environment.get("note_title")).to.be.equal(responseCN.data.title);
      });

      insomnia.test("7.1 - Assert note description", function () {
          insomnia.expect(insomnia.environment.get("note_description")).to.be.equal(responseCN.data.description);
      });

      insomnia.test("7.1 - Assert note category", function () {
          insomnia.expect(insomnia.environment.get("note_category")).to.be.equal(responseCN.data.category);
      });

      insomnia.test("7.1 - Assert user id", function () {
          insomnia.expect(insomnia.environment.get("user_id")).to.be.equal(responseCN.data.user_id);
      });

    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3de3b3561e8848988fb3ebd85e33d157
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725909349049
    created: 1725866961480
    url: "{{base_url}}/notes"
    name: 7.2 - Creates a new note - bad request
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
            "title":"{{ _.note_title }}",
            "description":"{{ _.note_description }}",
            "category":"a"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960089
    isPrivate: false
    afterResponseScript: "let responseCNBR = insomnia.response.json();\r

      \r

      insomnia.test(\"7.2 - Check creates a new note - bad request
      success\", function () {\r

      \    insomnia.expect(responseCNBR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"7.2 - Check creates a new note - bad request
      status\", function () {\r

      \    insomnia.expect(responseCNBR.status).to.be.equal(400);\r

      });\r

      insomnia.test(\"7.2 - Check creates a new note - bad request
      message\", function () {\r

      \    insomnia.expect(responseCNBR.message).to.be.equal(\"Category
      must be one of the categories: Home, Work, Personal\");\r

      });\r

      \r

      \r\n"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_2d75c49ad48a4b6cb60d0fd4db80d1b2
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725909392760
    created: 1725866961481
    url: "{{base_url}}/notes"
    name: 7.3 - Creates a new note - unauthorized request
    description: ""
    method: POST
    body:
      mimeType: ""
      text: |-
        {
            "title":"{{ _.note_title }}",
            "description":"{{ _.note_description }}",
            "category":"{{ _.note_category }}"
        }
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "@{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960088
    isPrivate: false
    afterResponseScript: "let responseCNUR = insomnia.response.json();\r

      \r

      insomnia.test(\"7.3 - Check creates a new note - unauthorized
      request success\", function () {\r

      \    insomnia.expect(responseCNUR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"7.3 - Check creates a new note - unauthorized
      request status\", function () {\r

      \    insomnia.expect(responseCNUR.status).to.be.equal(401);\r

      });\r

      insomnia.test(\"7.3 - Check creates a new note - unauthorized
      request message\", function () {\r

      \    insomnia.expect(responseCNUR.message).to.be.equal(\"Access
      token is not valid or has expired, you will need to login\");\r

      });\r

      \r

      \r\n"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_9aa89bc28af848919ea37a0cad679798
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725909591900
    created: 1725866961483
    url: "{{base_url}}/notes"
    name: 8 - Creates another new note
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
            "title":"{{ _.note_2_title }}",
            "description":"{{ _.note_2_description }}",
            "category":"{{note_2_category}}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: >-
      insomnia.environment.set("note_2_category", _.sample(['Home', 'Work',
      'Personal']));

      let note_2_description_preview = insomnia.variables.replaceIn("{{$randomWord}} {{$randomWord}}");

      insomnia.environment.set("note_2_description", note_2_description_preview);

      let note_2_title_preview = insomnia.variables.replaceIn("{{$randomWord}} {{$randomWord}} {{$randomWord}}");

      insomnia.environment.set("note_2_title", note_2_title_preview);
    metaSortKey: -1725866960087
    isPrivate: false
    afterResponseScript: >+
      let responseCAN = insomnia.response.json();

      let requestCAN = JSON.parse(insomnia.request.body.raw);


      // insomnia.environment.set("note_2_title", requestCAN.title);

      // insomnia.environment.set("note_2_description", requestCAN.description);

      // insomnia.environment.set("note_2_category", requestCAN.category);

      insomnia.environment.set("note_2_id", responseCAN.data.id);

      insomnia.environment.set("note_2_completed", responseCAN.data.completed);

      insomnia.environment.set("note_2_created_at", responseCAN.data.created_at);

      insomnia.environment.set("note_2_updated_at", responseCAN.data.updated_at);


      insomnia.test("8 - Check creates another new note success", function () {
          insomnia.expect(responseCAN.success).to.be.equal(true);
      });

      insomnia.test("8 - Check creates another new note status", function () {
          insomnia.expect(responseCAN.status).to.be.equal(200);
      });

      insomnia.test("8 - Check creates another new note message", function () {
          insomnia.expect(responseCAN.message).to.be.equal("Note successfully created");
      });

      insomnia.test("8 - Assert note title", function () {
          insomnia.expect(insomnia.environment.get("note_2_title")).to.be.equal(responseCAN.data.title);
      });

      insomnia.test("8 - Assert note description", function () {
          insomnia.expect(insomnia.environment.get("note_2_description")).to.be.equal(responseCAN.data.description);
      });

      insomnia.test("8 - Assert note category", function () {
          insomnia.expect(insomnia.environment.get("note_2_category")).to.be.equal(responseCAN.data.category);
      });

      insomnia.test("8 - Assert user id", function () {
          insomnia.expect(insomnia.environment.get("user_id")).to.be.equal(responseCAN.data.user_id);
      });

    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_8d3d9ebfec92477fa47037417c47fa73
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961484
    created: 1725866961484
    url: "{{base_url}}/notes"
    name: 9.1 - Get all notes
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960086
    isPrivate: false
    afterResponseScript: "let responseGAN = insomnia.response.json();\r

      \r

      insomnia.test(\"9.1 - Check get all notes success\", function () {\r

      \    insomnia.expect(responseGAN.success).to.be.equal(true);\r

      });\r

      insomnia.test(\"9.1 - Check get all notes status\", function () {\r

      \    insomnia.expect(responseGAN.status).to.be.equal(200);\r

      });\r

      insomnia.test(\"9.1 - Check get all notes message\", function () {\r

      \    insomnia.expect(responseGAN.message).to.be.equal(\"Notes
      successfully retrieved\");\r

      });\r

      insomnia.test(\"9.1 - Assert note id\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_id\")).to.be.e\
      qual(responseGAN.data[1].id);\r

      });\r

      insomnia.test(\"9.1 - Assert note title\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_title\")).to.b\
      e.equal(responseGAN.data[1].title);\r

      });\r

      insomnia.test(\"9.1 - Assert note description\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_description\")\
      ).to.be.equal(responseGAN.data[1].description);\r

      });\r

      insomnia.test(\"9.1 - Assert note category\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_category\")).t\
      o.be.equal(responseGAN.data[1].category);\r

      });\r

      insomnia.test(\"9.1 - Assert note completed\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_completed\")).\
      to.be.equal(responseGAN.data[1].completed);\r

      });\r

      insomnia.test(\"9.1 - Assert note created_at\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_created_at\"))\
      .to.be.equal(responseGAN.data[1].created_at);\r

      });\r

      insomnia.test(\"9.1 - Assert note updated_at\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_updated_at\"))\
      .to.be.equal(responseGAN.data[1].updated_at);\r

      });\r

      insomnia.test(\"9.1 - Assert user id for note\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"user_id\")).to.be.e\
      qual(responseGAN.data[1].user_id);\r

      });\r

      insomnia.test(\"9.1 - Assert note 2 id\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_2_id\")).to.be\
      .equal(responseGAN.data[0].id);\r

      });\r

      insomnia.test(\"9.1 - Assert note 2 title\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_2_title\")).to\
      .be.equal(responseGAN.data[0].title);\r

      });\r

      insomnia.test(\"9.1 - Assert note 2 description\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_2_description\
      \")).to.be.equal(responseGAN.data[0].description);\r

      });\r

      insomnia.test(\"9.1 - Assert note 2 category\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_2_category\"))\
      .to.be.equal(responseGAN.data[0].category);\r

      });\r

      insomnia.test(\"9.1 - Assert note 2 completed\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_2_completed\")\
      ).to.be.equal(responseGAN.data[0].completed);\r

      });\r

      insomnia.test(\"9.1 - Assert note 2 created_at\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_2_created_at\"\
      )).to.be.equal(responseGAN.data[0].created_at);\r

      });\r

      insomnia.test(\"9.1 - Assert note 2 updated_at\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_2_updated_at\"\
      )).to.be.equal(responseGAN.data[0].updated_at);\r

      });\r

      insomnia.test(\"9.1 - Assert user id for note 2\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"user_id\")).to.be.e\
      qual(responseGAN.data[0].user_id);\r

      });\r\n"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_d7739e8886ff4f90b2a27fb306e653e6
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961486
    created: 1725866961486
    url: "{{base_url}}/notes"
    name: 9.2 - Get all notes - bad request
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "{{user_token}}"
      - name: x-content-format
        value: badRequest
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960085
    isPrivate: false
    afterResponseScript: "let responseGANBR = insomnia.response.json();\r

      \r

      insomnia.test(\"9.2 - Check get all notes - bad request success\",
      function () {\r

      \    insomnia.expect(responseGANBR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"9.2 - Check get all notes - bad request status\",
      function () {\r

      \    insomnia.expect(responseGANBR.status).to.be.equal(400);\r

      });\r

      insomnia.test(\"9.2 - Check get all notes - bad request message\",
      function () {\r

      \    insomnia.expect(responseGANBR.message).to.be.equal(\"Invalid
      X-Content-Format header, Only application/json is supported.\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_c4df6c45fa0344219ae72da4c20d5741
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961488
    created: 1725866961488
    url: "{{base_url}}/notes"
    name: 9.3 - Get all notes - unauthorized request
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "@{{user_token}}"
      - name: ""
        value: ""
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960084
    isPrivate: false
    afterResponseScript: "let responseGANUR = insomnia.response.json();\r

      \r

      insomnia.test(\"9.3 - Check get all notes - unauthorized request
      success\", function () {\r

      \    insomnia.expect(responseGANUR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"9.3 - Check get all notes - unauthorized request
      status\", function () {\r

      \    insomnia.expect(responseGANUR.status).to.be.equal(401);\r

      });\r

      insomnia.test(\"9.3 - Check get all notes - unauthorized request
      message\", function () {\r

      \    insomnia.expect(responseGANUR.message).to.be.equal(\"Access
      token is not valid or has expired, you will need to login\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_921a369c6375468f8249b85699142699
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961490
    created: 1725866961490
    url: "{{base_url}}/notes/{{note_id}}"
    name: 10.1 - Get note by ID
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960083
    isPrivate: false
    afterResponseScript: "let responseGN = insomnia.response.json();\r

      \r

      insomnia.test(\"10.1 - Check get note by ID success\", function ()
      {\r

      \    insomnia.expect(responseGN.success).to.be.equal(true);\r

      });\r

      insomnia.test(\"10.1 - Check get note by ID status\", function ()
      {\r

      \    insomnia.expect(responseGN.status).to.be.equal(200);\r

      });\r

      insomnia.test(\"10.1 - Check get note by ID message\", function ()
      {\r

      \    insomnia.expect(responseGN.message).to.be.equal(\"Note
      successfully retrieved\");\r

      });\r

      insomnia.test(\"10.1 - Assert note id\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_id\")).to.be.e\
      qual(responseGN.data.id);\r

      });\r

      insomnia.test(\"10.1 - Assert note title\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_title\")).to.b\
      e.equal(responseGN.data.title);\r

      });\r

      insomnia.test(\"10.1 - Assert note description\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_description\")\
      ).to.be.equal(responseGN.data.description);\r

      });\r

      insomnia.test(\"10.1 - Assert note category\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_category\")).t\
      o.be.equal(responseGN.data.category);\r

      });\r

      insomnia.test(\"10.1 - Assert note completed\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_completed\")).\
      to.be.equal(responseGN.data.completed);\r

      });\r

      insomnia.test(\"10.1 - Assert note created_at\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_created_at\"))\
      .to.be.equal(responseGN.data.created_at);\r

      });\r

      insomnia.test(\"10.1 - Assert note updated_at\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"note_updated_at\"))\
      .to.be.equal(responseGN.data.updated_at);\r

      });\r

      insomnia.test(\"10.1 - Assert user id for note\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"user_id\")).to.be.e\
      qual(responseGN.data.user_id);\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_18c2b9609ef84515b5908059626c628f
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961491
    created: 1725866961491
    url: "{{base_url}}/notes/{{note_id}}"
    name: 10.2 - Get note by ID - bad request
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "{{user_token}}"
      - name: x-content-format
        value: badRequest
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960082
    isPrivate: false
    afterResponseScript: "let responseGNBR = insomnia.response.json();\r

      \r

      insomnia.test(\"10.2 - Check get note by ID - bad request success\",
      function () {\r

      \    insomnia.expect(responseGNBR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"10.2 - Check get note by ID - bad request status\",
      function () {\r

      \    insomnia.expect(responseGNBR.status).to.be.equal(400);\r

      });\r

      insomnia.test(\"10.2 - Check get note by ID - bad request message\",
      function () {\r

      \    insomnia.expect(responseGNBR.message).to.be.equal(\"Invalid
      X-Content-Format header, Only application/json is supported.\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_0bb7d0e6a78a42318f346a58c52de17e
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961493
    created: 1725866961493
    url: "{{base_url}}/notes/{{note_id}}"
    name: 10.3 - Get note by ID - unauthorized request
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "@{{user_token}}"
      - name: ""
        value: ""
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960081
    isPrivate: false
    afterResponseScript: "let responseGNUR = insomnia.response.json();\r

      \r

      insomnia.test(\"10.3 - Check get note by ID - unauthorized request
      success\", function () {\r

      \    insomnia.expect(responseGNUR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"10.3 - Check get note by ID - unauthorized request
      status\", function () {\r

      \    insomnia.expect(responseGNUR.status).to.be.equal(401);\r

      });\r

      insomnia.test(\"10.3 - Check get note by ID - unauthorized request
      message\", function () {\r

      \    insomnia.expect(responseGNUR.message).to.be.equal(\"Access
      token is not valid or has expired, you will need to login\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_424b6fb4cdef49dd9788f74d5ca4391e
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725911680438
    created: 1725866961494
    url: "{{base_url}}/notes/{{note_id}}"
    name: 11.1 - Update an existing note
    description: ""
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
            "title":"{{ _.note_title }}",
            "description":"{{ _.note_description }}",
            "category":"{{ _.note_category }}",
        	  "completed":"{{ _.note_completed }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: >-
      insomnia.environment.set("note_category", _.sample(['Home', 'Work',
      'Personal']));


      let note_description_update = insomnia.variables.replaceIn("{{$randomWord}} {{$randomWord}}");

      insomnia.environment.set("note_description", note_description_update);


      let note_title_update = insomnia.variables.replaceIn("{{$randomWord}} {{$randomWord}} {{$randomWord}}");

      insomnia.environment.set("note_title", note_title_update);


      if (insomnia.environment.get("note_completed") == false) { 

      insomnia.environment.set("note_completed", true);

      }

      else { 

      insomnia.environment.set("note_completed", false);

      }
    metaSortKey: -1725866960080
    isPrivate: false
    afterResponseScript: >-
      let responseUN = insomnia.response.json();

      let requestUN = JSON.parse(insomnia.request.body.raw);


      // insomnia.environment.set("note_title", requestUN.title);

      // insomnia.environment.set("note_description", requestUN.description);

      // insomnia.environment.set("note_category", requestUN.category);

      // insomnia.environment.set("note_completed", requestUN.completed);


      insomnia.test("11.1  - Check update an existing note success", function () {
          insomnia.expect(responseUN.success).to.be.equal(true);
      });

      insomnia.test("11.1  - Check update an existing note status", function () {
          insomnia.expect(responseUN.status).to.be.equal(200);
      });

      insomnia.test("11.1  - Check update an existing note message", function () {
          insomnia.expect(responseUN.message).to.be.equal("Note successfully Updated");
      });

      insomnia.test("11.1  - Assert note id", function () {
          insomnia.expect(insomnia.environment.get("note_id")).to.be.equal(responseUN.data.id);
      });

      insomnia.test("11.1  - Assert note title", function () {
          insomnia.expect(insomnia.environment.get("note_title")).to.be.equal(responseUN.data.title);
      });

      insomnia.test("11.1  - Assert note description", function () {
          insomnia.expect(insomnia.environment.get("note_description")).to.be.equal(responseUN.data.description);
      });

      insomnia.test("11.1  - Assert note category", function () {
          insomnia.expect(insomnia.environment.get("note_category")).to.be.equal(responseUN.data.category);
      });

      insomnia.test("11.1  - Assert note completed", function () {
          // It uses == due to the fact that the compared values are a boolean and a string
          insomnia.expect(insomnia.environment.get("note_completed")) == (responseUN.data.completed);
      });

      insomnia.test("11.1  - Assert note created_at", function () {
          insomnia.expect(insomnia.environment.get("note_created_at")).to.be.equal(responseUN.data.created_at);
      });

      insomnia.test("11.1  - Assert user id for note", function () {
          insomnia.expect(insomnia.environment.get("user_id")).to.be.equal(responseUN.data.user_id);
      });
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_05fb3262de9f4fe3b0c726341b9c385f
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725911584815
    created: 1725866961495
    url: "{{base_url}}/notes/{{note_id}}"
    name: 11.2 - Update an existing note - bad request
    description: ""
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
            "title":"{{ _.note_title }}",
            "description":"{{ _.note_description }}",
            "category":"a",
        	  "completed":"{{ _.note_completed }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960079
    isPrivate: false
    afterResponseScript: "let responseUNBR = insomnia.response.json();\r

      \r

      insomnia.test(\"11.2  - Check update an existing note - bad request
      success\", function () {\r

      \    insomnia.expect(responseUNBR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"11.2  - Check update an existing note - bad request
      status\", function () {\r

      \    insomnia.expect(responseUNBR.status).to.be.equal(400);\r

      });\r

      insomnia.test(\"11.2  - Check update an existing note - bad request
      message\", function () {\r

      \    insomnia.expect(responseUNBR.message).to.be.equal(\"Category
      must be one of the categories: Home, Work, Personal\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_989b780cd53443c89158ac629e88f175
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725911631186
    created: 1725866961496
    url: "{{base_url}}/notes/{{note_id}}"
    name: 11.3 - Update an existing note - unauthorized request
    description: ""
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
            "title":"{{ _.note_title }}",
            "description":"{{ _.note_description }}",
            "category":"{{ _.note_category }}",
        	  "completed":"{{ _.note_completed }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "@{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960078
    isPrivate: false
    afterResponseScript: "let responseUNBR = insomnia.response.json();\r

      \r

      insomnia.test(\"11.3  - Check update an existing note - unauthorized
      request success\", function () {\r

      \    insomnia.expect(responseUNBR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"11.3  - Check update an existing note - unauthorized
      request status\", function () {\r

      \    insomnia.expect(responseUNBR.status).to.be.equal(401);\r

      });\r

      insomnia.test(\"11.3  - Check update an existing note - unauthorized
      request message\", function () {\r

      \    insomnia.expect(responseUNBR.message).to.be.equal(\"Access
      token is not valid or has expired, you will need to login\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_fea751a163194578b1a1d1b1c25473f7
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725913162567
    created: 1725866961497
    url: "{{base_url}}/notes/{{note_id}}"
    name: 12.1 - Update the completed status of a note
    description: ""
    method: PATCH
    body:
      mimeType: application/json
      text: |-
        {
            "completed":"{{ _.note_completed }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: "if (insomnia.environment.get(\"note_completed\") == false) {
      \r

      insomnia.environment.set(\"note_completed\", true);\r

      }\r

      else { \r

      insomnia.environment.set(\"note_completed\", false);\r

      }"
    metaSortKey: -1725866960077
    isPrivate: false
    afterResponseScript: >-
      let responseUCSN = insomnia.response.json();

      let requestUCSN = JSON.parse(insomnia.request.body.raw);


      // insomnia.environment.set("note_completed", requestUCSN.completed);


      insomnia.test("12.1 - Check update the completed status of a note success", function () {
          insomnia.expect(responseUCSN.success).to.be.equal(true);
      });

      insomnia.test("12.1 - Check update the completed status of a note status", function () {
          insomnia.expect(responseUCSN.status).to.be.equal(200);
      });

      insomnia.test("12.1 - Check update the completed status of a note message", function () {
          insomnia.expect(responseUCSN.message).to.be.equal("Note successfully Updated");
      });

      insomnia.test("12.1 - Assert note id", function () {
          insomnia.expect(insomnia.environment.get("note_id")).to.be.equal(responseUCSN.data.id);
      });

      insomnia.test("12.1 - Assert note title", function () {
          insomnia.expect(insomnia.environment.get("note_title")).to.be.equal(responseUCSN.data.title);
      });

      insomnia.test("12.1 - Assert note description", function () {
          insomnia.expect(insomnia.environment.get("note_description")).to.be.equal(responseUCSN.data.description);
      });

      insomnia.test("12.1 - Assert note category", function () {
          insomnia.expect(insomnia.environment.get("note_category")).to.be.equal(responseUCSN.data.category);
      });

      insomnia.test("12.1 - Assert note completed", function () {
          // It uses == due to the fact that the compared values are a boolean and a string
          insomnia.expect(insomnia.environment.get("note_completed")) == (responseUCSN.data.completed);
      });

      insomnia.test("12.1 - Assert note created_at", function () {
          insomnia.expect(insomnia.environment.get("note_created_at")).to.be.equal(responseUCSN.data.created_at);
      });

      insomnia.test("12.1 - Assert user id for note", function () {
          insomnia.expect(insomnia.environment.get("user_id")).to.be.equal(responseUCSN.data.user_id);
      });
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_9ba80a969190467bbeceb8f85a6c6f3e
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725911762911
    created: 1725866961499
    url: "{{base_url}}/notes/{{note_id}}"
    name: 12.2 - Update the completed status of a note - bad request
    description: ""
    method: PATCH
    body:
      mimeType: application/json
      text: "{\r\n    \"completed\":\"a\"\r\n}"
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960076
    isPrivate: false
    afterResponseScript: "let responseUCSNBR = insomnia.response.json();\r

      \r

      insomnia.test(\"12.2 - Check update the completed status of a note -
      bad request success\", function () {\r

      \    insomnia.expect(responseUCSNBR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"12.2 - Check update the completed status of a note -
      bad request status\", function () {\r

      \    insomnia.expect(responseUCSNBR.status).to.be.equal(400);\r

      });\r

      insomnia.test(\"12.2 - Check update the completed status of a note -
      bad request message\", function () {\r

      \    insomnia.expect(responseUCSNBR.message).to.be.equal(\"Note
      completed status must be boolean\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_d436773e00a343c3b5aedeb1b73ab48e
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725947761442
    created: 1725866961500
    url: "{{base_url}}/notes/{{note_id}}"
    name: 12.3 - Update the completed status of a note - unauthorized request
    description: ""
    method: PATCH
    body:
      mimeType: application/json
      text: |-
        {
            "completed":"{{ _.note_completed }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
      - name: X-Auth-Token
        value: "@{{user_token}}"
    authentication: {}
    preRequestScript: |-
      if (insomnia.environment.get("note_completed") == false) { 
      insomnia.environment.set("note_completed", true);
      }
      else { 
      insomnia.environment.set("note_completed", false);
      }
    metaSortKey: -1725866960075
    isPrivate: false
    afterResponseScript: "let responseUCSNUR = insomnia.response.json();\r

      \r

      insomnia.test(\"12.3 - Check update the completed status of a note -
      unauthorized request success\", function () {\r

      \    insomnia.expect(responseUCSNUR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"12.3 - Check update the completed status of a note -
      unauthorized request status\", function () {\r

      \    insomnia.expect(responseUCSNUR.status).to.be.equal(401);\r

      });\r

      insomnia.test(\"12.3 - Check update the completed status of a note -
      unauthorized request message\", function () {\r

      \    insomnia.expect(responseUCSNUR.message).to.be.equal(\"Access
      token is not valid or has expired, you will need to login\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_527e1fb7eae84e8e9cafdb8ec2205cfa
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961502
    created: 1725866961502
    url: "{{base_url}}/notes/@{{note_id}}"
    name: 13.1 - Delete a note by ID - bad request
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960074
    isPrivate: false
    afterResponseScript: "let responseDNBR = insomnia.response.json();\r

      \r

      insomnia.test(\"13.1 - Check delete a note by ID - bad request
      success\", function () {\r

      \    insomnia.expect(responseDNBR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"13.1 - Check delete a note by ID - bad request
      status\", function () {\r

      \    insomnia.expect(responseDNBR.status).to.be.equal(400);\r

      });\r

      insomnia.test(\"13.1 - Check delete a note by ID - bad request
      message\", function () {\r

      \    insomnia.expect(responseDNBR.message).to.be.equal(\"Note ID
      must be a valid ID\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3ed08cf33342489f8447353313e0adb3
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961503
    created: 1725866961503
    url: "{{base_url}}/notes/{{note_id}}"
    name: 13.2 - Delete a note by ID - unauthorized request
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "@{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960073
    isPrivate: false
    afterResponseScript: "let responseDNUR = insomnia.response.json();\r

      \r

      insomnia.test(\"13.2 - Check delete a note by ID - unauthorized
      request success\", function () {\r

      \    insomnia.expect(responseDNUR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"13.2 - Check delete a note by ID - unauthorized
      request status\", function () {\r

      \    insomnia.expect(responseDNUR.status).to.be.equal(401);\r

      });\r

      insomnia.test(\"13.2 - Check delete a note by ID - unauthorized
      request message\", function () {\r

      \    insomnia.expect(responseDNUR.message).to.be.equal(\"Access
      token is not valid or has expired, you will need to login\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_b7bb670f59794afab9412b872f0c5154
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961504
    created: 1725866961504
    url: "{{base_url}}/notes/{{note_id}}"
    name: 13.3 - Delete a note by ID
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960072
    isPrivate: false
    afterResponseScript: "let responseDN = insomnia.response.json();\r

      \r

      insomnia.test(\"13.3 - Check delete a note by ID success\", function
      () {\r

      \    insomnia.expect(responseDN.success).to.be.equal(true);\r

      });\r

      insomnia.test(\"13.3 - Check delete a note by ID status\", function
      () {\r

      \    insomnia.expect(responseDN.status).to.be.equal(200);\r

      });\r

      insomnia.test(\"13.3 - Check delete a note by ID message\", function
      () {\r

      \    insomnia.expect(responseDN.message).to.be.equal(\"Note
      successfully deleted\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_9c76c4a1ebcd43a09b0330782e829357
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961505
    created: 1725866961505
    url: "{{base_url}}/users/logout"
    name: 14.1 - Log out a user - bad request
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "{{user_token}}"
      - name: x-content-format
        value: badRequest
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960071
    isPrivate: false
    afterResponseScript: "let responseLOUBR = insomnia.response.json();\r

      \r

      insomnia.test(\"14.1 - Check log out a user - bad request success\",
      function () {\r

      \    insomnia.expect(responseLOUBR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"14.1 - Check log out a user - bad request status\",
      function () {\r

      \    insomnia.expect(responseLOUBR.status).to.be.equal(400);\r

      });\r

      insomnia.test(\"14.1 - Check log out a user - bad request message\",
      function () {\r

      \    insomnia.expect(responseLOUBR.message).to.be.equal(\"Invalid
      X-Content-Format header, Only application/json is supported.\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_f1bdcd66bb7842acbfca5cf33bafbc47
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961506
    created: 1725866961506
    url: "{{base_url}}/users/logout"
    name: 14.2 - Log out a user - unauthorized request
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "@{{user_token}}"
      - name: ""
        value: ""
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960070
    isPrivate: false
    afterResponseScript: "let responseLOUUR = insomnia.response.json();\r

      \r

      insomnia.test(\"14.2 - Check log out a user - unauthorized request
      success\", function () {\r

      \    insomnia.expect(responseLOUUR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"14.2 - Check log out a user - unauthorized request
      status\", function () {\r

      \    insomnia.expect(responseLOUUR.status).to.be.equal(401);\r

      });\r

      insomnia.test(\"14.2 - Check log out a user - unauthorized request
      message\", function () {\r

      \    insomnia.expect(responseLOUUR.message).to.be.equal(\"Access
      token is not valid or has expired, you will need to login\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_93aea0151ccd45a582675a569a2c3510
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725869568736
    created: 1725866961507
    url: "{{base_url}}/users/logout"
    name: 14.3 - Log out a user
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960069.75
    isPrivate: false
    afterResponseScript: "let responseLOU = insomnia.response.json();\r

      \r

      insomnia.test(\"14.3 - Check log out a user success\", function ()
      {\r

      \    insomnia.expect(responseLOU.success).to.be.equal(true);\r

      });\r

      insomnia.test(\"14.3 - Check log out a user status\", function ()
      {\r

      \    insomnia.expect(responseLOU.status).to.be.equal(200);\r

      });\r

      insomnia.test(\"14.3 - Check log out a user message\", function ()
      {\r

      \    insomnia.expect(responseLOU.message).to.be.equal(\"User has
      been successfully logged out\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_2e04776d67224aa78c83ebfe6e38649c
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725911941477
    created: 1725866961509
    url: "{{base_url}}/users/login"
    name: 15 - Log in after log out
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
            "email":"{{ _.user_email }}",
            "password":"{{ _.user_password }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960068
    isPrivate: false
    afterResponseScript: "let responseLIALOU = insomnia.response.json();\r

      \r

      insomnia.environment.set(\"user_token\",
      responseLIALOU.data.token);\r

      \r

      insomnia.test(\"15 - Check log in after log out success\", function
      () {\r

      \    insomnia.expect(responseLIALOU.success).to.be.equal(true);\r

      });\r

      insomnia.test(\"15 - Check log in after log out status\", function
      () {\r

      \    insomnia.expect(responseLIALOU.status).to.be.equal(200);\r

      });\r

      insomnia.test(\"15 - Check log in after log out message\", function
      () {\r

      \    insomnia.expect(responseLIALOU.message).to.be.equal(\"Login
      successful\");\r

      });\r

      insomnia.test(\"15 - Assert user id\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"user_id\")).to.be.e\
      qual(responseLIALOU.data.id);\r

      });\r

      insomnia.test(\"15 - Assert user name\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"user_name\")).to.be\
      .equal(responseLIALOU.data.name);\r

      });\r

      insomnia.test(\"15 - Assert user e-mail\", function () {\r

      \    insomnia.expect(insomnia.environment.get(\"user_email\")).to.b\
      e.equal(responseLIALOU.data.email);\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_a2cba9467d90464c989f28cc3a41ffa1
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961510
    created: 1725866961510
    url: "{{_['base_url']}}/users/delete-account"
    name: 16.1 - Delete user account - bad request
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "{{user_token}}"
      - name: x-content-format
        value: badRequest
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960067
    isPrivate: false
    afterResponseScript: "let responseDUBR = insomnia.response.json();\r

      \r

      insomnia.test(\"16.1 - Check delete user account - bad request
      success\", function () {\r

      \    insomnia.expect(responseDUBR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"16.1 - Check delete user account - bad request
      status\", function () {\r

      \    insomnia.expect(responseDUBR.status).to.be.equal(400);\r

      });\r

      insomnia.test(\"16.1 - Check delete user account - bad request
      message\", function () {\r

      \    insomnia.expect(responseDUBR.message).to.be.equal(\"Invalid
      X-Content-Format header, Only application/json is supported.\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_36a782eb0f6b4d8e934fab1c2005c146
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961511
    created: 1725866961511
    url: "{{_['base_url']}}/users/delete-account"
    name: 16.2 - Delete user account - unauthorized request
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "@{{user_token}}"
      - name: ""
        value: ""
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960066
    isPrivate: false
    afterResponseScript: "let responseDUUR = insomnia.response.json();\r

      \r

      insomnia.test(\"16.2 - Check delete user account - unauthorized
      request success\", function () {\r

      \    insomnia.expect(responseDUUR.success).to.be.equal(false);\r

      });\r

      insomnia.test(\"16.2 - Check delete user account - unauthorized
      request status\", function () {\r

      \    insomnia.expect(responseDUUR.status).to.be.equal(401);\r

      });\r

      insomnia.test(\"16.2 - Check delete user account - unauthorized
      request message\", function () {\r

      \    insomnia.expect(responseDUUR.message).to.be.equal(\"Access
      token is not valid or has expired, you will need to login\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_bb057764adc348f498d7c32820014565
    parentId: fld_dd83a69417254ff0af232899ad53e460
    modified: 1725866961512
    created: 1725866961512
    url: "{{_['base_url']}}/users/delete-account"
    name: 16.1 - Delete user account
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers:
      - name: X-Auth-Token
        value: "{{user_token}}"
    authentication: {}
    preRequestScript: ""
    metaSortKey: -1725866960065
    isPrivate: false
    afterResponseScript: "let responseDU = insomnia.response.json();\r

      \r

      insomnia.test(\"16.1 - Check delete user account success\", function
      () {\r

      \    insomnia.expect(responseDU.success).to.be.equal(true);\r

      });\r

      insomnia.test(\"16.1 - Check delete user account status\", function
      () {\r

      \    insomnia.expect(responseDU.status).to.be.equal(200);\r

      });\r

      insomnia.test(\"16.1 - Check delete user account message\", function
      () {\r

      \    insomnia.expect(responseDU.message).to.be.equal(\"Account
      successfully deleted\");\r

      });"
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: env_2823eed6d2ec22c7e5b9138dfc44636b8a2f3af2
    parentId: wrk_89cad6614e814a15aca3dd4bf8d26018
    modified: 1725955731442
    created: 1725866941340
    name: expandtesting_env
    data:
      base_url: https://practice.expandtesting.com/notes/api
      user_name: Ernest Abernathy
      user_email: sydni.macgyver@yahoo.com
      user_id: 66dfe1a9c99d1a014d4e1ae6
      user_password: Gvl4rRwJgD2MpQQ
      user_token: 2739eb785a714de6bee905f098f0edda80faadf492e74c15b4b0294f6f717cac
      user_phone: 804269017663
      user_company: Weber Inc
      note_category: Home
      note_title: transmitter firewall protocol
      note_description: application protocol
      note_id: 66dfe1f5c99d1a014d4e1af9
      note_created_at: 2024-09-10T06:06:45.926Z
      note_updated_at: 2024-09-10T06:06:45.926Z
      note_2_category: Work
      note_2_title: program system pixel
      note_2_description: card bus
      note_2_id: 66dfe1ffc99d1a014d4e1aff
      note_2_completed: false
      note_2_created_at: 2024-09-10T06:06:55.366Z
      note_2_updated_at: 2024-09-10T06:06:55.366Z
      user_password_new: Gvl4rRwJgD2MpQQ
      note_completed: true
    dataPropertyOrder:
      "&":
        - base_url
        - user_name
        - user_email
        - user_id
        - user_password
        - user_token
        - user_phone
        - user_company
        - note_category
        - note_title
        - note_description
        - note_id
        - note_created_at
        - note_updated_at
        - note_2_category
        - note_2_title
        - note_2_description
        - note_2_id
        - note_2_completed
        - note_2_created_at
        - note_2_updated_at
        - user_password_new
        - note_completed
    color: null
    isPrivate: false
    metaSortKey: 1725866941340
    _type: environment
  - _id: jar_2823eed6d2ec22c7e5b9138dfc44636b8a2f3af2
    parentId: wrk_89cad6614e814a15aca3dd4bf8d26018
    modified: 1725955731433
    created: 1725866941342
    name: Default Jar
    cookies:
      - id: b11e754e-cbfc-492a-be56-3d953b8eec1d
        key: express:sess
        value: eyJmbGFzaCI6e319
        expires: Infinity
        domain: practice.expandtesting.com
        path: /
        secure: false
        httpOnly: true
        extensions: []
        creation: 2024-09-09T07:42:21.056Z
        hostOnly: true
        lastAccessed: 2024-09-09T07:42:21.056Z
      - id: 600e214a-391a-48f0-bc58-1db23b63e2cd
        key: express:sess.sig
        value: tdt42nQZiQvICqmrvHQ1_16fHk0
        expires: Infinity
        domain: practice.expandtesting.com
        path: /
        secure: false
        httpOnly: true
        extensions: []
        creation: 2024-09-09T07:42:21.056Z
        hostOnly: true
        lastAccessed: 2024-09-09T07:42:21.056Z
    _type: cookie_jar
